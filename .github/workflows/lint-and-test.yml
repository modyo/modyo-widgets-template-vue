name: Linters and Test

on:
  pull_request:
    branches:
      - master
      - develop
    types: [ opened, edited, reopened, synchronize ]
  push:
    branches:
      - develop
jobs:
  install-node-modules:
    name: Install Node Modules
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: npm
          registry-url: 'https://npm.pkg.github.com'
          scope: '@modyo'
      - uses: actions/cache@v3
        id: npm-cache
        name: Cache Node_modules for parallels executions
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install packages
        run: npm ci
        if: steps.npm-cache.outputs.cache-hit != 'true'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.TOKEN_REG }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  lint-js:
    name: Linter Javascript Files
    runs-on: ubuntu-latest
    needs: install-node-modules
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: npm
      - uses: actions/cache@v3
        id: npm-cache
        name: Cache Node_modules for parallels executions
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install packages
        run: npm i -D
        if: steps.npm-cache.outputs.cache-hit != 'true'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.TOKEN_REG }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Execute lint JS
        run: npm run lint
      - name: Execute lint JS
        run: npm run lint
  lint-css:
    name: Linter Css Files
    runs-on: ubuntu-latest
    needs: install-node-modules
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: npm
      - uses: actions/cache@v3
        id: npm-cache
        name: Cache Node_modules for parallels executions
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install packages
        run: npm i -D
        if: steps.npm-cache.outputs.cache-hit != 'true'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.TOKEN_REG }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Execute stylelint
        run: npm run lint:style
  run-test-and-sonar-push:
    name: Unit Test and Sonar Cloud push
    runs-on: ubuntu-latest
    needs: install-node-modules
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: npm
      - uses: actions/cache@v3
        id: npm-cache
        name: Cache Node_modules for parallels executions
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install packages
        run: npm i -D
        if: steps.npm-cache.outputs.cache-hit != 'true'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.TOKEN_REG }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Execute Unit Test
        run: npm run test:coverage
      # - name: SonarCloud Scan
      #   uses: SonarSource/sonarcloud-github-action@master
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
